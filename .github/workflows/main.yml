name: CI
on:
  push:
    branches:
      - ali
      - osama
jobs:
  Linting_Test:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout the code
      uses: actions/checkout@v3
    - name: call python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
    - name: Lint Python code
      run: |
            pip install flake8
            flake8 .
    - name: Install Hadolint
      run: |
          wget -qO- https://github.com/hadolint/hadolint/releases/download/v2.10.0/hadolint-Linux-x86_64 -O /usr/local/bin/hadolint
          chmod +x /usr/local/bin/hadolint
    - name: Lint Dockerfile
      run: hadolint Dockerfile
  SonarQube_Analysis:
    needs: Linting_Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the code
      uses: actions/checkout@v3
    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt-openj9'  
    - name: Analyze with SonarQube
        # You can pin the exact commit or the version.
      uses: SonarSource/sonarqube-scan-action@v4
      #uses: SonarSource/sonarqube-scan-action@7295e71c9583053f5bf40e9d4068a0c974603ec8
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on SonarQube, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}   # add the URL of your instance to the secrets of this repo with the name SONAR_HOST_URL (Settings > Secrets > Actions > add new repository secret)
      with:
          # Additional arguments for the sonarcloud scanner
        args:
            # Unique key of your project. You can find it in SonarQube > [my project] > Project Information (top-right menu)
            # mandatory
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
          -Dsonar.organization=${{ secrets.SONAR_ORG_KEY }}
          -Dsonar.verbose=true
            # Comma-separated paths to directories containing main source files.
            #-Dsonar.sources= # optional, default is project base directory
            # When you need the analysis to take place in a directory other than the one from which it was launched
            #-Dsonar.projectBaseDir= # optional, default is .
            # Comma-separated paths to directories containing test source files.
            #-Dsonar.tests= # optional. For more info about Code Coverage, please refer to https://docs.sonarcloud.io/enriching/test-coverage/overview/
            # Adds more detail to both client and server-side analysis logs, activating DEBUG mode for the scanner, and adding client-side environment variables and system properties to the server-side log of analysis report processing.
           # optional, default is false
  Python_Tests:
    needs: SonarQube_Analysis
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout the code
      uses: actions/checkout@v3
    - name: call python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
          pip install -r requirements.txt
    - name: run tests
      run: pytest
  Build:
    needs: Python_Tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the code
      uses: actions/checkout@v3
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: build docker image
      run: 
          docker compose build
    - name: Tag and Push Docker Images
      run: |
        IMAGE_TAG=$(date +%s)
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
        docker tag hivebox ghcr.io/rezo7895/hivebox:$IMAGE_TAG
        docker push ghcr.io/rezo7895/hivebox:$IMAGE_TAG